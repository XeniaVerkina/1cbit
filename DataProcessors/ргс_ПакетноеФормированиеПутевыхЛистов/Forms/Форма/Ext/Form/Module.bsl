//Заполнить ТЧ
&НаКлиенте
Процедура Заполнить(Команда)
	//Очистка ТЧ
	Объект.ЗаказыНаТехнику.Очистить();
	//Отбор по Периоду
	Если НЕ ЗначениеЗаполнено(Объект.Период) Тогда	
		Сообщить("Не задан период");
		Возврат;
	КонецЕсли;
	ЗаполнитьНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
   	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	бит_мат_ЗаказНаТехнику.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.бит_мат_ЗаказНаТехнику КАК бит_мат_ЗаказНаТехнику
		|ГДЕ
		|	бит_мат_ЗаказНаТехнику.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И (&НеПроверятьОрганизацию
		|			ИЛИ бит_мат_ЗаказНаТехнику.Организация = &Организация)
		|	И (&НеПроверятьПодразделение
		|			ИЛИ бит_мат_ЗаказНаТехнику.Подразделение = &Подразделение)
		|	И (&НеПроверятьОбъект
		|			ИЛИ бит_мат_ЗаказНаТехнику.Объект = &Объект)
		|	И НЕ бит_мат_ЗаказНаТехнику.ргс_ПутевыеЛистыСозданы
		|	И бит_мат_ЗаказНаТехнику.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ДатаНачала", Объект.Период.ДатаНачала); 
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.Период.ДатаОкончания);
	Запрос.УстановитьПараметр("НеПроверятьОбъект", ?(ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа), Ложь, Истина));
	Запрос.УстановитьПараметр("НеПроверятьОрганизацию", ?(ЗначениеЗаполнено(Объект.Организация), Ложь, Истина));
	Запрос.УстановитьПараметр("НеПроверятьПодразделение", ?(ЗначениеЗаполнено(Объект.Подразделение), Ложь, Истина));
	Запрос.УстановитьПараметр("Объект", Объект.НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
		ТЧЗаказыНаТехнику = Объект.ЗаказыНаТехнику.Добавить();	
		ТЧЗаказыНаТехнику.ЗаказНаТехнику = ВыборкаДетальныеЗаписи.Ссылка;			
	КонецЦикла;
КонецПроцедуры

//ОчисткаТЧ
&НаКлиенте
Процедура Очистить(Команда)
	Объект.РезультатОбработки.Очистить();
	Объект.ЗаказыНаТехнику.Очистить();
КонецПроцедуры

//Настройки формы выбора
&НаКлиенте
Процедура Подбор(Команда)
	НастройкиКомпоновки = Новый НастройкиКомпоновкиДанных;
	
	//Создание отбора
	ГруппаОтбора = НастройкиКомпоновки.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));   
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	//Отбор по созданным ПЛ
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина; 
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ргс_ПутевыеЛистыСозданы");
	ЭлементОтбора.ПравоеЗначение = Ложь; 
	
	//Отбор по поментке на удаление
	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина; 
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	ЭлементОтбора.ПравоеЗначение = Ложь;

	
	//Отбор по Периоду
	Если ЗначениеЗаполнено(Объект.Период) Тогда			
	    ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно; //Как будем сравнивать
		ЭлементОтбора.Использование = Истина; // Устанавливаем галку использования НовыйПолеКомпоновкиДанных  
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата"); //По какому реквизиту будем делать отбор
		ЭлементОтбора.ПравоеЗначение = Объект.Период.ДатаНачала; // И само значение отбора 
		
	    ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементОтбора.Использование = Истина; 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Дата");
		ЭлементОтбора.ПравоеЗначение = Объект.Период.ДатаОкончания;
	КонецЕсли;
	
	//Отбор по Организации
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
		ЭлементОтбора.ПравоеЗначение = Объект.Организация;			
	КонецЕсли;  
	
	//Отбор по Номенклатурной группе
	Если ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда
	    ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина; 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
		ЭлементОтбора.ПравоеЗначение = Объект.НоменклатурнаяГруппа; 	
	КонецЕсли; 
		
	//Отбор по Подразделению	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
	    ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина; 
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
		ЭлементОтбора.ПравоеЗначение = Объект.Подразделение; 	
	КонецЕсли;
	
	//Парметры формы выбора
	ПараметрыФормы = Новый Структура("ФиксированныеНастройки, ЗакрыватьПриВыборе, МножественныйВыбор", НастройкиКомпоновки, Ложь, Истина);
	ОткрытьФорму("Документ.бит_мат_ЗаказНаТехнику.ФормаВыбора", ПараметрыФормы, Элементы.ЗаказыНаТехнику);				
КонецПроцедуры  

//Добавление выбранных документов в ТЧ ЗаказыНаТехнику
&НаКлиенте
Процедура ЗаказыНаТехникуОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) 
	
	Для Каждого ВыбранныйЭлемент Из ВыбранноеЗначение Цикл
		НайденнаяСтрока = Объект.ЗаказыНаТехнику.НайтиСтроки(новый структура("ЗаказНаТехнику",ВыбранныйЭлемент));
		Если НайденнаяСтрока.Количество() = 0 ИЛИ НайденнаяСтрока = Неопределено Тогда 
			НоваяСтрока = Объект.ЗаказыНаТехнику.Добавить();
			НоваяСтрока.ЗаказНаТехнику = ВыбранныйЭлемент;   
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры
          
//ВыбратьВсе
&НаКлиенте
Процедура ВыбратьВсе(Команда)
    Для Каждого ЗаказыНаТехникуЗаказНаТехнику Из Объект.ЗаказыНаТехнику Цикл
        ЗаказыНаТехникуЗаказНаТехнику.Отметка = Истина;
    КонецЦикла;
КонецПроцедуры

//ОтменитьВыбранные
&НаКлиенте
Процедура ОтменитьВыбранные(Команда)
	Для Каждого ЗаказыНаТехникуЗаказНаТехнику Из Объект.ЗаказыНаТехнику Цикл
        ЗаказыНаТехникуЗаказНаТехнику.Отметка = Ложь;
    КонецЦикла;
КонецПроцедуры	

&НаКлиенте
Процедура ПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка) 
	
	СтандартнаяОбработка = Ложь;

	Если ЗначениеЗаполнено(Объект.Организация) Тогда

		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Владелец", Объект.Организация);  
		
		
		ПараметрыФормы = Новый Структура("Отбор, ЗакрыватьПриВыборе, РежимВыбора", ПараметрыОтбора, Истина, Истина);

		ОткрытьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора", ПараметрыФормы, Элементы.Подразделение); 
		
	Иначе 
		СтандартнаяОбработка = Истина; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.Подразделение = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
	
КонецПроцедуры
